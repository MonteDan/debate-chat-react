/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/chats": {
    /** Create a new chat */
    post: {
      requestBody: {
        content: {
          "application/json": {
            title?: string;
            id?: string;
          };
        };
      };
      responses: {
        /** @description Returns the created chat */
        200: {
          content: {
            "application/json": components["schemas"]["Chat"];
          };
        };
      };
    };
  };
  "/chats/{chatID}": {
    /** Get a chat by ID */
    get: {
      parameters: {
        path: {
          chatID: string;
        };
      };
      responses: {
        /** @description Returns the chat */
        200: {
          content: {
            "application/json": components["schemas"]["Chat"];
          };
        };
      };
    };
  };
  "/chats/{chatID}/admin": {
    /** Get a chat by ID as an admin */
    get: {
      parameters: {
        path: {
          chatID: string;
        };
      };
      responses: {
        /** @description Returns the chat */
        200: {
          content: {
            "application/json": components["schemas"]["Chat"];
          };
        };
      };
    };
  };
  "/message": {
    /** Send a message */
    post: {
      requestBody: {
        content: {
          "application/json": {
            content?: string;
            chatId?: string;
          };
        };
      };
      responses: {
        /** @description Message sent */
        200: {
          content: never;
        };
      };
    };
  };
  "/message/{messageID}": {
    /** Delete a message */
    delete: {
      parameters: {
        path: {
          messageID: string;
        };
      };
      responses: {
        /** @description Message deleted */
        200: {
          content: never;
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Chat: {
      title?: string;
      id?: string;
      adminToken?: string;
      messages?: components["schemas"]["Message"][];
    };
    Message: {
      content?: string;
      id?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
